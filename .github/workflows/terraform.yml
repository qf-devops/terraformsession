name: 'Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production
    # permissions:
    #   id-token: write
    #   contents: read
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1
      AWS_DEFAULT_OUTPUT: json


    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    # - name: Configure AWS credentials from Test account
    #   uses: aws-actions/configure-aws-credentials@v4
    #   with:
    #     audience: sts.amazonaws.com.cn
    #     role-to-assume: arn:aws:iam::652313455557:role/my-github-actions-role
    #     aws-region: us-east-1
    - name: Terraform Init
      working-directory: ./jenkins
      run: terraform init

    - name: Terraform Plan
      working-directory: ./jenkins
      run: terraform plan -input=false -out=tf.plan

    - name: Terraform Apply
      working-directory: ./jenkins
      # if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
      run: terraform apply "tf.plan"
    
    - name: Terraform Apply
      working-directory: ./jenkins
      # if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
      run: terraform destroy --auto-approve
